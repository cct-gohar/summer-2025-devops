name: CI/CD Pipeline with kind

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: bookdb
          POSTGRES_USER: bookuser
          POSTGRES_PASSWORD: bookpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U bookuser" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    env:
      IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}
      DB_NAME: bookdb
      DB_USER: bookuser
      DB_PASSWORD: bookpass
      DB_HOST: localhost
      DB_PORT: 5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U bookuser; do
            echo "Waiting for postgres..."
            sleep 3
          done

      - name: Run unit tests
        run: python manage.py test

      - name: Install kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Create kind cluster
        run: kind create cluster --name book-catalog-cluster

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:${{ github.sha }} .

      - name: Load Docker image into kind
        run: kind load docker-image $IMAGE_NAME:${{ github.sha }} --name book-catalog-cluster

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: "v3.13.0"

      - name: Deploy with Helm
        run: |
          helm upgrade --install book-catalog ./helm \
            --set image.repository=$IMAGE_NAME \
            --set image.tag=${{ github.sha }}
